#+ endpoint: https://api.druid.datalegend.net/datasets/RubenS/kerouac-vde/services/kerouac-vde/sparql

PREFIX dbp: <http://dbpedia.org/property/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX dbpedia: <http://dbpedia.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wd: <http://www.wikidata.org/>
PREFIX schema: <http://schema.org/>
PREFIX bib: <http://id.loc.gov/ontologies/bibframe/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>

SELECT DISTINCT ?worldcat_label ?beat_generation ?beat_works ?wikidata_work WHERE {
  
  ?worldcat_author a bib:Agent .
  ?worldcat_author   rdfs:label ?worldcat_label .
  ?worldcat_author  owl:sameAs wd:Q160534 # retrieve wikidata Entity code from AUTHOR AUTHORITY FIELD 

  FILTER(?worldcat_label = "Kerouac, Jack,1922-1969.")
 
service <https://dbpedia.org/sparql> { # take our query to another linked data store: DBpedia

  ?dbpedia_author  owl:sameAs wd:Q160534 . # use wikidata Entity code to access author information in DBpedia!
  ?dbpedia_author dbo:notableWork ?notable_work . # retrieve notable works from Kerouac
  ?notable_work dbo:literaryGenre ?genre. # use those works to find the literary genre
  FILTER(?genre != <http://dbpedia.org/resource/Novel>) # (remove 'novel' from genre category to clean results)
  ?genre dbo:wikiPageWikiLink ?beat_generation_output . # give me all things associated with the beat generation
  ?beat_generation_output dbo:notableWork ?beat_works . # now give me the notable works from those things
  ?beat_works rdf:type ?beat_work_type  # retrieve the type of these works (books, movies, poems, etc.)
   
    VALUES ?beat_work_type { dbo:Book } # filter the works on books
    ?beat_works owl:sameAs ?wikidata_work . # give me the link to these works in wikidata
    FILTER(REGEX(?wikidata_work, "wikidata"))
    
    }
} ORDER BY ?beat_generation
